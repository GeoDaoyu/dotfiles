{
  "new Promise": {
    "prefix": "np",
    "body": "new Promise((resolve, reject) => {\n\t${0}\n})"
  },
  "sleep": {
    "prefix": "sleep",
    "body": "const sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms))"
  },
  "const statement": {
    "prefix": "c",
    "body": "const ${1:name}"
  },
  "const statement from destructuring": {
    "prefix": "cd",
    "body": "const { ${2:prop} } = ${1:value}"
  },
  "const statement from array destructuring": {
    "prefix": "cad",
    "body": "const [ ${2:prop} ] = ${1:value}"
  },
  "const arrow function assignment": {
    "prefix": "cf",
    "body": "const ${1:name} = (${2:arguments}) => {\n\treturn ${0}\n}"
  },
  "const object": {
    "prefix": "co",
    "body": "const ${1:name} = {\n\t${0}\n}"
  },
  "const array": {
    "prefix": "car",
    "body": "const ${1:name} = [\n\t${0}\n]"
  },
  "import module": {
    "prefix": "im",
    "body": "import ${2:*} from '${1:module}'"
  },
  "import module destructured": {
    "prefix": "imd",
    "body": "import {$2} from '${1:module}'"
  },
  "module default export": {
    "prefix": "ed",
    "body": "export default ${1:member}"
  },
  "console.log": {
    "prefix": "cl",
    "body": "console.log(${0})"
  },
  "console.log with log": {
    "prefix": "log",
    "body": "console.log(${0})"
  },
  "console.log a variable": {
    "prefix": "cv",
    "body": "console.log('${1}:', ${1})"
  },
  "Set Timeout Function": {
    "prefix": "settimeout",
    "body": ["setTimeout(() => {", "\t$0", "}, ${1:timeout});"],
    "description": "Set Timeout Function"
  },
  "Set Interval Function": {
    "prefix": "setinterval",
    "body": ["setInterval(() => {", "\t$0", "}, ${1:interval});"],
    "description": "Set Interval Function"
  }
}
